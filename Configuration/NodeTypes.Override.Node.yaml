'Neos.Neos:Node': &node
  search:
    fulltext:
      enable: true
  properties:
    'neos_node_identifier':
      search:
        elasticSearchMapping:
          type: keyword
        indexing: '${node.aggregateId}'

    'neos_workspace':
      search:
        elasticSearchMapping:
          type: keyword
        indexing: '${node.workspaceName}'

    'neos_path':
      search:
        elasticSearchMapping:
          type: keyword
        indexing: '${Indexing.aggregateIdPath(node)}'

    'neos_parent_path':
      search:
        elasticSearchMapping:
          type: keyword
        # we index *all* parent paths as separate tokens to allow for efficient searching without a prefix query
        indexing: '${Array.pop(Indexing.buildAllPathPrefixes(Indexing.aggregateIdPath(node)))}'

    # we index the node type INCLUDING ALL SUPERTYPES
    'neos_type_and_supertypes':
      search:
        elasticSearchMapping:
          type: keyword
        indexing: '${Indexing.extractNodeTypeNamesAndSupertypes(node)}'

    'neos_last_modification_date_time':
      search:
        elasticSearchMapping:
          type: date
          format: 'date_time_no_millis'
        indexing: '${(node.timestamps.lastModified ? Date.format(node.timestamps.lastModified, "Y-m-d\TH:i:sP") : null)}'

    'neos_last_publication_date_time':
      search:
        elasticSearchMapping:
          type: date
          format: 'date_time_no_millis'
        indexing: '${(node.timestamps.originalLastModified ? Date.format(node.timestamps.originalLastModified, "Y-m-d\TH:i:sP") : null)}'

    'neos_creation_date_time':
      search:
        elasticSearchMapping:
          type: date
          format: 'date_time_no_millis'
        indexing: '${(node.timestamps.created ? Date.format(node.timestamps.created, "Y-m-d\TH:i:sP") : null)}'
    # deliberately don't map or index this
    '_nodeType':
      search:
        indexing: false
    '_hidden':
      search:
        indexing: false
'unstructured': *node
